[gd_scene load_steps=8 format=3 uid="uid://qxjgc087a083"]

[ext_resource type="Script" path="res://scenes/shaders/ActionDarkness.gd" id="1_odrm3"]

[sub_resource type="Shader" id="Shader_ipce2"]
code = "shader_type canvas_item;


uniform sampler2D noise: repeat_enable;
uniform vec4 line_color: source_color;
uniform float line_count: hint_range(0.0, 2.0, 0.05) = 0.5;
uniform float line_density: hint_range(0.0, 1.0) = 0.5;
uniform float line_faloff: hint_range(0.0, 1.0) = 0.25;
uniform float mask_size: hint_range(0.0, 1.0) = 0.1;
uniform float mask_edge: hint_range(0.0, 1.0) = 0.5;
uniform float animation_speed: hint_range(1.0, 20.0) = 0.5;




float inv_lerp(float from, float to, float value){
  return (value - from) / (to - from);
}




vec2 polar_coordinates(vec2 uv, vec2 center, float zoom, float repeat)
{
	vec2 dir = uv - center;
	float radius = length(dir) * 2.0;
	float angle = atan(dir.y, dir.x) * 1.0/(PI * 2.0);
	return mod(vec2(radius * zoom, angle * repeat), 1.0);
}




vec2 rotate_uv(vec2 uv, vec2 pivot, float rotation) {
    float cosa = cos(rotation);
    float sina = sin(rotation);
    uv -= pivot;
    return vec2(
        cosa * uv.x - sina * uv.y,
        cosa * uv.y + sina * uv.x 
    ) + pivot;
}




void fragment(){
	vec2 polar_uv = polar_coordinates(rotate_uv(UV, vec2(0.5), floor(fract(TIME) * animation_speed) ) , vec2(0.5), 0.01, line_count);
	vec3 lines = texture(noise, polar_uv).rgb;
	
	float mask_value = length(UV - vec2(0.5));
	float mask = inv_lerp(mask_size, mask_edge, mask_value);
	float result = 1.0 - (mask * line_density);
	
	result = smoothstep(result, result + line_faloff, lines.r);
	
	COLOR.rgb = vec3(line_color.rgb);
	COLOR.a = min(line_color.a, result);
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_8u1ox"]
noise_type = 3
fractal_type = 3
fractal_weighted_strength = 0.37
fractal_ping_pong_strength = 4.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_dkgmu"]
invert = true
seamless = true
seamless_blend_skirt = 1.0
noise = SubResource("FastNoiseLite_8u1ox")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xa0nw"]
shader = SubResource("Shader_ipce2")
shader_parameter/line_color = Color(0, 0, 0, 0.898039)
shader_parameter/line_count = 2.0
shader_parameter/line_density = 1.0
shader_parameter/line_faloff = 1.0
shader_parameter/mask_size = 0.475
shader_parameter/mask_edge = 0.562
shader_parameter/animation_speed = 6.542
shader_parameter/noise = SubResource("NoiseTexture2D_dkgmu")

[sub_resource type="Gradient" id="Gradient_513hs"]
offsets = PackedFloat32Array(0, 0.56213, 1)
colors = PackedColorArray(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_f4ivn"]
gradient = SubResource("Gradient_513hs")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(2.5, 2.5)

[node name="ActionDarkness" type="TextureRect"]
material = SubResource("ShaderMaterial_xa0nw")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -600.0
offset_top = -984.0
offset_right = 600.0
offset_bottom = 984.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
mouse_filter = 2
texture = SubResource("GradientTexture2D_f4ivn")
script = ExtResource("1_odrm3")
